一、基础
   1.如果路径名第一个字符是斜杠，那么这个路径就是绝对路径，起点为根目录。
     如果路径第一项为目录或文件名，那么这个路径就是相对路径，起点为进程的当前目录。

   2.软链接(也称符号链接)/硬链接，似于windows下的快捷方式
     2.1软链接(也称符号链接)，是原文件的一个引用
        作用：便于文件的管理，比如把一个复杂路径下的文件链接到一个简单路径下方便用户访问。
             解决空间不足问题，如果某个文件系统空间已经用完了，但是现在必须在该文件系统下创建一个新的目录并存储大量的文件，
             那么可以把另一个剩余空间较多的文件系统中的目录链接到该文件系统中。

        执行以下命令，创建一个对文件wjx_link.txt的软链接s_link，修改s_link软链接(vim s_link)的内容，原文件的内容也会变更。
        ln -s wjx_link.txt s_link

        目录中会以以下方式显示软链接
        s_link -> wjx_link.txt


     2.2硬链接
        作用：硬链接的作用之一是允许一个文件拥有多个有效路径名，这样用户就可以建立硬链接到重要的文件，以防止“误删”源数据

        执行以下命令创建硬链接h_link，修改h_link硬链接(vim h_link)的内容，原文件的内容也会变更
        ln wjx_link.txt h_link

        目录中会以以下方式显示硬链接
        h_link

        硬链接不能链接目录，也不能跨文件系统创建链接，为了克服这些限制，引入了软链接。

     2.3软链接和硬链接的区别
        删除原文件，软链接失效，但不会影响硬链接（还保留原文件的数据）。
        软链接几乎不占用磁盘空间，硬链接和原文件一样大。


   3.文件的唯一标识为索引节点，每个文件都有自己的索引节点

   4.执行以下命令可临时禁用主机的ping响应（其他机器ping不通此主机，1表示禁用、0表示启用）
     echo 1 > /proc/sys/net/ipv4/icmp_echo_ignore_al


   5.文件目录
     5.1 /usr   usr是unix shared resources(共享资源)的缩写，这是一个非常重要的目录，用户的很多应用程序和文件都放在这个目录下，类似
                于windows下的program files目录。
     5.2 /var   var是variable的缩写，这个目录中存放着在不断扩充着的东西，我们习惯将那些经常被修改的目录放在这个目录下。包括各种(应用程序的)日志文件。
     5.3 /etc   etc是Etcetera(等等)的缩写,这个目录用来存放所有的系统管理所需要的配置文件和子目录。不要误删或更改此目录下的文件，因为
                可能会导致系统不能启动。

     5.4 /home  用户的家目录，每一个用户的家目录通常默认为/home/USERNAME

   6.挂载：指的就是将设备文件中的顶级目录连接到Linux根目录下的某一目录（最好是空目录），访问此目录就等同于访问设备文件。
          在 Linux 看来，任何硬件设备也都是文件，它们各有自己的一套文件系统（文件目录结构）。
          因此产生的问题是，当在Linux系统中使用这些硬件设备时，只有将Linux本身的文件目录与硬件设备的文件目录合二为一，硬件设备才能为
          我们所用。合二为一的过程称为“挂载”。

          注意：并不是根目录下任何一个目录都可以作为挂载点，由于挂载操作会使得原有目录中文件被隐藏(卸载后恢复正常)，因此根目录以及系统原有目录都不要
               作为挂载点，会造成系统异常甚至崩溃，挂载点最好是新建的空目录。


          将设备“/dev/sr0”挂载到挂载点/mnt/cdrom，/dev/sr0为设备文件名
          mount /dev/sr0 /mnt/cdrom

          卸载
          umount /dev/sr0

   7.执行以下命令查询系统识别到的硬盘设备
     fdisk -l

      输出内容如下，其中“/dev/vda”就是设备文件名
      Disk /dev/vda: 214.7 GB, 214748364800 bytes, 419430400 sectors
      Units = sectors of 1 * 512 = 512 bytes
      Sector size (logical/physical): 512 bytes / 512 bytes
      I/O size (minimum/optimal): 512 bytes / 512 bytes
      Disk label type: dos
      Disk identifier: 0x000c817d

         Device Boot      Start         End      Blocks   Id  System
      /dev/vda1   *        2048     2099199     1048576   83  Linux
      /dev/vda2         2099200   419184639   208542720   8e  Linux LVM

      Disk /dev/mapper/centos-root: 205.1 GB, 205084688384 bytes, 400556032 sectors
      Units = sectors of 1 * 512 = 512 bytes
      Sector size (logical/physical): 512 bytes / 512 bytes
      I/O size (minimum/optimal): 512 bytes / 512 bytes


      Disk /dev/mapper/centos-swap: 8455 MB, 8455716864 bytes, 16515072 sectors
      Units = sectors of 1 * 512 = 512 bytes
      Sector size (logical/physical): 512 bytes / 512 bytes
      I/O size (minimum/optimal): 512 bytes / 512 bytes


   7.vi/vim 命令模式、输入模式、底线命令模式
     i 在光标所在字符前开始插入
     a 在光标所在字符后开始插入
     o 在光标所在行的下面另起新行插入

                 输入:             输入i a o
              <---------         ------------>
      底行模式            命令模式             插入模式
              ---------->        <-----------
                Esc键               Esc键

   8.清屏
     clear  完全清除，无法向上翻页查看之前信息
     ctrl+L 可以向上翻页查看之前信息

   9.切换目录
     cd ~  直接切换到用户主目录，例如，home/test
     cd -  切换到上次访问的目录

   10.查看文件
      10.1 cat  只显示最后一屏内容
      10.2 more 百分比显示，回车显示下一行，空格显示下一页，q退出查看。不能向上查看
      10.3 less 翻页查看，回车显示下一行，空格显示下一页，q退出查看。也可以使用PageUp、PageDown向上和向下翻页
      10.4 tail 指定行数动态查看


   11.查找命令
      find是去硬盘找，locate只在/var/lib/slocate资料库中找。
      locate的速度比find快，它并不是真的查找，而是查数据库，一般文件数据库在 /var/lib/slocate/slocate.db 中，所以locate的查找
      并不是实时的，而是以数据库的更新为准，一般是系统自己维护，也可以手工升级数据库 ，命令为：updatedb

      11.1 ps命令
          ps -ef|grep java                 查找java进程
          ps -ef|grep java | grep -v grep  查找java进程并排除grep进程本身

      11.2 locate命令
           如果报以下错误，则先执行updatedb命令即可(默认每天执行一次updatedb，locate是通过生成一个文件和文件夹的索引数据库，当用户
                            在执行loacte命令查找文件时，它会直接在索引数据库里查找，若该数据库太久没更新或不存在，则会提示以下错误)
           locate: can not stat () `/var/lib/mlocate/mlocate.db': No such file or directory

           locate redis.conf

   12.执行以下命令查看操作系统版本
      uname -a

      输出内容如下，3.10.0-957.el7.x86_64就是版本号信息
      Linux dev88 3.10.0-957.el7.x86_64 #1 SMP Thu Nov 8 23:39:32 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux

   13.关闭linux的安全子系统(学习时会省掉很多配置)，将config文件中的SELINUX设置为disabled
      vim /etc/selinux/config

   14.读取文件中的内容并作为命令的输入，nginx.pid文件中的内容为master进程id
      kill -HUP `more /usr/local/nginx/logs/nginx.pid`

   15.使用当前shell读取并执行文件中的内容，通常用于重新执行刚修改的初始化文件，使之立即生效，而不必注销并重新登录
      source fileName

   16.查看防火墙状态
      systemctl status firewalld

      输出以下内容则未开启防火墙(状态为dead)
        firewalld.service - firewalld - dynamic firewall daemon
           Loaded: loaded (/usr/lib/systemd/system/firewalld.service; disabled; vendor preset: enabled)
           Active: inactive (dead)
             Docs: man:firewalld(1)

   17.top命令
      top - 17:49:11 up 29 days,  1:10,  4 users,  load average: 0.04, 0.09, 0.13

      17:49:11表示当前时间
      up 29 days表示运行了多长时间
      4 users表示有多少个用户在使用
      load average: 0.04, 0.09, 0.13表示CPU在1分钟、5分钟、15分钟内的负载情况

      CPU负载含义，以4核CPU为例
             负载为0.15则一个核都没有用满
             负载为1则其中一个核基本用满，其它三个核比较空闲
             负载为4则4个核基本都用满了
             负载为6则4个核基本都用满了，很多进程可能在等待CPU执行自己的任务












